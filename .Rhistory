sapply(case2002[, 5:7], sd)
# Why do we calculate sd here?
# We want to find those variables that have large variances
install.packages("Sleuth2")
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message=FALSE)
install.packages("Sleuth2")
install.packages("car")
library(Sleuth2)
summary(case2002)
sapply(case2002[, 5:7], sd)
# Why do we calculate sd here?
# We want to find those variables that have large variances
plot(case2002[, 5:7], col = case2002$LC)
#The indicator for having lung cancer seems to split the data at more extreme
#values of our continuous variables; however, we might be concerned with some
#multicollinearity with the year variable in particular and should check this
#later on.
#--------------------- Another scatterplot matrix option ---------------------
library(car)
scatterplotMatrix(~AG+YR+CD|LC,data=case2002[, c(1,5:7)])
logit.overall = glm(LC ~ ., family = "binomial", data = case2002)
# Note that the option family is set to binomial,
# which tells R to perform logistic regression.
logit.overall = glm(LC ~ ., family = "binomial", data = case2002)
# Note that the option family is set to binomial,
# which tells R to perform logistic regression.
# H0: The logistic regression model is appropriate.
# H1: The logistic regression model is not appropriate.
pchisq(logit.overall$deviance, logit.overall$df.residual, lower.tail = FALSE)
# Why do we use lower.tail here?
# http://stats.stackexchange.com/questions/22347/is-chi-squared-always-a-one-sided-test
#The p-value for the overall goodness of fit test is about 0.20,
#which is greater than the cutoff value of 0.05. We do not have
#evidence to reject the null hypothesis that the model is appropriate.
logit.overall$coefficients
# ---- OR -----
summary(logit.overall)
#The log odds of having lung cancer are increased by about 0.56 if you
#are a female as compared to a male, holding all other variables constant.
logit.noBK = glm(LC ~ . - BK, family = "binomial", data = case2002)
#overall goodness of fit test
pchisq(logit.noBK$deviance, logit.noBK$df.residual, lower.tail = FALSE)
#The p-value for the overall goodness of fit test is about 0.07, which is greater
#than the cutoff value of 0.05. We do not have evidence to reject the null
#hypothesis that the model is appropriate.
pchisq(logit.noBK$deviance - logit.overall$deviance,
logit.noBK$df.residual - logit.overall$df.residual,
lower.tail = FALSE)
#------------------------------------------------Note-----------------------------------------
# Likelihood ratio tests are similar to partial F-tests in the sense that they compare
# the full model with a restricted model where the explanatory variables of interest are omitted.
# The p-values of the tests are calculated using the Chi-square distribution.
#----------------------------------------------------------------------------------------------
# More simply,a likelihood ratio test comparing the full and reduced models can be performed
# using the anova() function with the additional option test="Chisq".
anova(logit.noBK, logit.overall, test = "Chisq")
#The p-value for the drop in deviance test is < 0.001, which is quite significant.
#We reject the null hypothesis that the coefficient for the birdkeeping variable
#is 0, and conclude that having it in the model should provide a better fit.
#i.e., the full model is better than the reduced model
logit.justBKYR = glm(LC ~ BK + YR, family = "binomial", data = case2002)
pchisq(logit.justBKYR$deviance - logit.overall$deviance,
logit.justBKYR$df.residual - logit.overall$df.residual,
lower.tail = FALSE)
#---------OR---------------
anova(logit.justBKYR, logit.overall, test = "Chisq")
#The p-value for the drop in deviance test is quite large at 0.4175, indicating
#that the null hypothesis that the coefficients of gender, socioeconomic status,
#age, and average rate of smoking are jointly not adding any predictive power
#to our analysis. The reduced model is sufficient.
AIC(logit.overall, logit.noBK, logit.justBKYR)
BIC(logit.overall, logit.noBK, logit.justBKYR)
1 - logit.overall$deviance/logit.overall$null.deviance
1 - logit.noBK$deviance/logit.noBK$null.deviance
1 - logit.justBKYR$deviance/logit.justBKYR$null.deviance
#The AIC and BIC are minimized for the most simplified model, indicating that it
#is most preferable. While the McFadden's R^2 term isn't maximized for the most
#simplified model (only about 15.5% as compared to about 17.6% for the overall
#model with all coefficients), we choose to move forward with the simplified
#model because it has relatively high predictive power alongside simplicity.
#---------------------How to interpret the McFadden's R^2------------------------
#http://stats.stackexchange.com/questions/82105/mcfaddens-pseudo-r2-interpretation
newdata = with(case2002, data.frame(YR = mean(YR),
BK = factor(c("Bird", "NoBird"))))
cbind(newdata, "Prob. Lung Cancer" = predict(logit.justBKYR, newdata, type = "response"))
newdata = data.frame(YR = 0, BK = factor(c("Bird", "NoBird")))
cbind(newdata, "Prob. Lung Cancer" = predict(logit.justBKYR, newdata, type = "response"))
#------------------------------------------Note---------------------------------------
# The usage is similar to that of the function predict which we previously used when working
# on multiple linear regression problems. The main difference is the option type, which tells
# R which type of prediction is required.
#-------------------------------------------------------------------------------------------
# The default predictions are given on the logit scale (i.e.predictions are made in terms of the log odds),
# while using type = "response"
LC.predicted = round(logit.justBKYR$fitted.values)
table(truth = case2002$LC, prediction = LC.predicted)
(85+22)/147
98/147
#The model performs decently well with an approximate 72.79% accuracy; this is
#a bit above the baseline of 66.67% accuracy if we were to simply guess that
#every individual has no lung cancer within our dataset.
# Why do we choose the larger group 98/147 as our baseline?
# Because if we don't do any analysis on this and a new sample comes in,
# we will assign the most likely category to the new one. So this is the base line.
knitr::opts_chunk$set(message = FALSE, warning=F)
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
carloads = read.csv("./carloads.csv", stringsAsFactors = F)
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
carloads = read.csv("./carloads.csv", stringsAsFactors = F)
ism = read.csv("./ism.csv", stringsAsFactors = F)
carloads = read.csv("./carloads.csv", stringsAsFactors = F)
ism = read.csv("./ism.csv", stringsAsFactors = F)
carloads.sumarry()
carloads = read.csv("./carloads.csv", stringsAsFactors = F)
ism = read.csv("./ism.csv", stringsAsFactors = F)
summarise(carloads)
carloads = read.csv("./carloads.csv", stringsAsFactors = F)
ism = read.csv("./ism.csv", stringsAsFactors = F)
summarise(carloads)
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
carloads = read.csv("./carloads.csv", stringsAsFactors = F)
ism = read.csv("./ism.csv", stringsAsFactors = F)
summarise(carloads)
carloads <- carloads %>%
filter(
Measure == 'Weekly Carloads By 22 Commodity Categories',
Sub.Variable == 'Total'
)
carloads <- carloads %>%
pivot_longer(
X3.29.2017:X10.7.2020, "Week", values_to = "Carloads"
)
carloads <- carloads %>% select(
Company, Commodity=Variable, Week, Carloads
)
carloads <- carloads %>%
mutate(
Week = gsub("X", "", Week),
Carloads = gsub(",", "", Carloads)
)
carloads <- carloads %>%
mutate(
Carloads = as.numeric(Carloads)
)
carloads <- carloads %>%
mutate(
Week = as.Date(Week, "%m.%d.%Y")
)
ism <- ism %>% mutate(Date=as.Date(Date, "%m/%d/%Y"))
carloads <- carloads %>%
mutate(
Year = year(Week),
Month = month(Week)
)
ism <- ism %>%
mutate(
Year = year(Date),
Month = month(Date)
)
carloads <- carloads %>%
group_by(Company, Commodity, Year, Month) %>%
summarise(Carloads = sum(Carloads))
df <- carloads %>%
inner_join(ism, by=c("Year","Month"))
df %>%
filter(Commodity=="Containers") %>%
ggplot() +
geom_boxplot(
aes(Company, Carloads),
) +
facet_grid(Year~.) +
scale_y_continuous(labels = scales::comma) +
theme(text = element_text(size=10)) # The last two lines are for aesthetic purposes and are not necessary
df %>%
group_by(Company, Commodity) %>%
summarise(correlation=cor(Carloads, Index)) %>%
arrange(desc(correlation)) %>%
head(10) %>%
knitr::kable() # This is a function that produces a table that is better displayed in an html file rendered from R Markdown.
df %>%
filter(Commodity=="Crushed Stone, Sand and Gravel")  %>%
mutate(Year=as.factor(Year)) %>%
group_by(Year, Month) %>%
summarise(Carloads = sum(Carloads), Index=first(Index)) %>%
ggplot() +
geom_point(aes(Carloads, Index, color=Year))
carloads = read.csv("./carloads.csv", stringsAsFactors = F)
ism = read.csv("./ism.csv", stringsAsFactors = F)
carloads
carloads <- carloads %>%
filter(
Measure == 'Weekly Carloads By 22 Commodity Categories',
Sub.Variable == 'Total'
)
carloads <- carloads %>%
pivot_longer(
X3.29.2017:X10.7.2020, "Week", values_to = "Carloads"
)
carloads <- carloads %>% select(
Company, Commodity=Variable, Week, Carloads
)
carloads <- carloads %>% select(
Company, Commodity=Variable, Week, Carloads
)
carloads <- carloads %>%
pivot_longer(
X3.29.2017:X10.7.2020, "Week", values_to = "Carloads"
)
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
carloads = read.csv("./carloads.csv", stringsAsFactors = F)
ism = read.csv("./ism.csv", stringsAsFactors = F)
carloads <- carloads %>%
pivot_longer(
X3.29.2017:X10.7.2020, "Week", values_to = "Carloads"
)
carloads <- carloads %>% select(
Company, Carloads
)
carloads <- carloads %>%
mutate(
Week = gsub("X", "", Week),
Carloads = gsub(",", "", Carloads)
)
carloads <- carloads %>% select(
Company, Commodity=Variable, Week, Carloads
)
carloads <- carloads %>% select( Company, Commodity=Variable, Week, Carloads )
carloads <- carloads %>%
pivot_longer(
X3.29.2017:X10.7.2020, "Week", values_to = "Carloads"
)
carloads <- carloads %>%
pivot_longer(
X3.29.2017:X10.7.2020, "Week", values_to = "Carloads"
)
carloads <- carloads %>%
filter(
Measure == 'Weekly Carloads By 22 Commodity Categories',
Sub.Variable == 'Total'
)
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
carloads = read.csv("./carloads.csv", stringsAsFactors = F)
ism = read.csv("./ism.csv", stringsAsFactors = F)
carloads <- carloads %>%
filter(
Measure == 'Weekly Carloads By 22 Commodity Categories',
Sub.Variable == 'Total'
)
carloads <- carloads %>%
pivot_longer(
X3.29.2017:X10.7.2020, "Week", values_to = "Carloads"
)
carloads <- carloads %>% select( Company, Commodity=Variable, Week, Carloads )
carloads <- carloads %>%
mutate(
Week = gsub("X", "", Week),
Carloads = gsub(",", "", Carloads)
)
carloads <- carloads %>%
mutate(
Carloads = as.numeric(Carloads)
)
carloads <- carloads %>%
mutate(
Carloads = as.numeric(Carloads)
)
carloads <- carloads %>%
mutate(
Week = as.Date(Week, "%m.%d.%Y")
)
ism <- ism %>% mutate(Date=as.Date(Date, "%m/%d/%Y"))
carloads <- carloads %>%
mutate(
Year = year(Week),
Month = month(Week)
)
ism <- ism %>%
mutate(
Year = year(Date),
Month = month(Date)
)
carloads <- carloads %>%
group_by(Company, Commodity, Year, Month) %>%
summarise(Carloads = sum(Carloads))
carloads <- carloads %>%
mutate(
Year = year(Week),
Month = month(Week)
)
carloads <- carloads %>%
mutate(
Year = year(Week),
Month = month(Week)
)
carloads <- carloads %>%
mutate(
Week = as.Date(Week, "%m.%d.%Y")
)
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
carloads = read.csv("./carloads.csv", stringsAsFactors = F)
ism = read.csv("./ism.csv", stringsAsFactors = F)
carloads <- carloads %>%
filter(
Measure == 'Weekly Carloads By 22 Commodity Categories',
Sub.Variable == 'Total'
)
carloads <- carloads %>%
pivot_longer(
X3.29.2017:X10.7.2020, "Week", values_to = "Carloads"
)
carloads <- carloads %>% select( Company, Commodity=Variable, Week, Carloads )
carloads <- carloads %>%
mutate(
Week = gsub("X", "", Week),
Carloads = gsub(",", "", Carloads)
)
carloads <- carloads %>%
mutate(
Carloads = as.numeric(Carloads)
)
carloads <- carloads %>%
mutate(
Week = as.Date(Week, "%m.%d.%Y")
)
ism <- ism %>% mutate(Date=as.Date(Date, "%m/%d/%Y"))
carloads <- carloads %>%
mutate(
Year = year(Week),
Month = month(Week)
)
ism <- ism %>%
mutate(
Year = year(Date),
Month = month(Date)
)
carloads <- carloads %>%
group_by(Company, Commodity, Year, Month) %>%
summarise(Carloads = sum(Carloads))
df <- carloads %>%
inner_join(ism, by=c("Year","Month"))
df %>%
filter(Commodity=="Containers") %>%
ggplot() +
geom_boxplot(
aes(Company, Carloads),
) +
facet_grid(Year~.) +
scale_y_continuous(labels = scales::comma) +
theme(text = element_text(size=10)) # The last two lines are for aesthetic purposes and are not necessary
df %>%
group_by(Company, Commodity) %>%
summarise(correlation=cor(Carloads, Index)) %>%
arrange(desc(correlation)) %>%
head(10) %>%
knitr::kable() # This is a function that produces a table that is better displayed in an html file rendered from R Markdown.
df %>%
filter(Commodity=="Crushed Stone, Sand and Gravel")  %>%
mutate(Year=as.factor(Year)) %>%
group_by(Year, Month) %>%
summarise(Carloads = sum(Carloads), Index=first(Index)) %>%
ggplot() +
geom_point(aes(Carloads, Index, color=Year))
knitr::opts_chunk$set(message = FALSE, warning=F)
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
carloads = read.csv("./carloads.csv", stringsAsFactors = F)
ism = read.csv("./ism.csv", stringsAsFactors = F)
carloads <- carloads %>%
filter(
Measure == 'Weekly Carloads By 22 Commodity Categories',
Sub.Variable == 'Total'
)
carloads <- carloads %>%
pivot_longer(
X3.29.2017:X10.7.2020, "Week", values_to = "Carloads"
)
carloads <- carloads %>% select( Company, Commodity=Variable, Week, Carloads )
carloads <- carloads %>%
mutate(
Week = gsub("X", "", Week),
Carloads = gsub(",", "", Carloads)
)
carloads <- carloads %>%
mutate(
Carloads = as.numeric(Carloads)
)
carloads <- carloads %>%
mutate(
Week = as.Date(Week, "%m.%d.%Y")
)
ism <- ism %>% mutate(Date=as.Date(Date, "%m/%d/%Y"))
carloads <- carloads %>%
mutate(
Year = year(Week),
Month = month(Week)
)
ism <- ism %>%
mutate(
Year = year(Date),
Month = month(Date)
)
carloads <- carloads %>%
group_by(Company, Commodity, Year, Month) %>%
summarise(Carloads = sum(Carloads))
df <- carloads %>%
inner_join(ism, by=c("Year","Month"))
df %>%
filter(Commodity=="Containers") %>%
ggplot() +
geom_boxplot(
aes(Company, Carloads),
) +
facet_grid(Year~.) +
scale_y_continuous(labels = scales::comma) +
theme(text = element_text(size=10)) # The last two lines are for aesthetic purposes and are not necessary
df %>%
group_by(Company, Commodity) %>%
summarise(correlation=cor(Carloads, Index)) %>%
arrange(desc(correlation)) %>%
head(10) %>%
knitr::kable() # This is a function that produces a table that is better displayed in an html file rendered from R Markdown.
df %>%
filter(Commodity=="Crushed Stone, Sand and Gravel")  %>%
mutate(Year=as.factor(Year)) %>%
group_by(Year, Month) %>%
summarise(Carloads = sum(Carloads), Index=first(Index)) %>%
ggplot() +
geom_point(aes(Carloads, Index, color=Year))
knitr::opts_chunk$set(message = FALSE, warning=F)
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
carloads = read.csv("./carloads.csv", stringsAsFactors = F)
ism = read.csv("./ism.csv", stringsAsFactors = F)
carloads <- carloads %>%
filter(
Measure == 'Weekly Carloads By 22 Commodity Categories',
Sub.Variable == 'Total'
)
carloads <- carloads %>%
pivot_longer(
X3.29.2017:X10.7.2020, "Week", values_to = "Carloads"
)
carloads <- carloads %>% select( Company, Commodity=Variable, Week, Carloads )
carloads <- carloads %>%
mutate(
Week = gsub("X", "", Week),
Carloads = gsub(",", "", Carloads)
)
carloads <- carloads %>%
mutate(
Carloads = as.numeric(Carloads)
)
carloads <- carloads %>%
mutate(
Week = as.Date(Week, "%m.%d.%Y")
)
ism <- ism %>% mutate(Date=as.Date(Date, "%m/%d/%Y"))
carloads <- carloads %>%
mutate(
Year = year(Week),
Month = month(Week)
)
ism <- ism %>%
mutate(
Year = year(Date),
Month = month(Date)
)
carloads <- carloads %>%
group_by(Company, Commodity, Year, Month) %>%
summarise(Carloads = sum(Carloads))
carloads <- carloads %>%
group_by(Company, Commodity, Year, Month) %>%
summarise(carloads = sum(Carloads))
library(RSQLite)
install.packages("rsconnect")
rsconnect::setAccountInfo(name='adnazujolakisic', token='67F5E12F4B3F5A6FE9ECCD2E008C4A46', secret='3726EJx4a7H3gmpT+fcLvY3OSAGCCKKhTt+yp2O1')
library(rsconnect)
install.packages(c('ggplot2', 'shiny'))
install.packages(c("ggplot2", "shiny"))
shiny::runApp('C:/Users/adna.lakisic/Desktop/R-Data-Analysis-Project')
runApp('C:/Users/adna.lakisic/Desktop/R-Data-Analysis-Project')
runApp('C:/Users/adna.lakisic/Desktop/R-Data-Analysis-Project')
runApp('C:/Users/adna.lakisic/Desktop/R-Data-Analysis-Project')
install.packages("shinydashboard")
shiny::runApp()
runApp()
